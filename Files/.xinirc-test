#!/bin/sh

# Load additional profile settings if available
[ -f ~/.xprofile ] && . ~/.xprofile

# Start the compositor if it's not running
pgrep -x xcompmgr >/dev/null || xcompmgr -C -t.25 -r2.2 -o.25 &

# Trap to kill background processes when exiting
trap 'kill 0' EXIT

# Function to determine battery icon based on percentage
battery_icon() {
  case $1 in
    9[5-9]|100) echo "";;
    7[5-9]|8[0-9]|9[0-4]) echo "";;
    5[0-9]|6[0-9]|7[0-4]) echo "";;
    2[5-9]|3[0-9]|4[0-9]) echo "";;
    *) echo "";;
  esac
}

# Function to determine volume icon based on level and mute status
volume_icon() {
  [ "$2" = "off" ] && echo "" && return
  [ "$1" -eq 0 ] && echo "" && return
  [ "$1" -le 50 ] && echo "" && return
  echo ""
}

# Store last seen values to detect changes
last_time=""
last_volume=""
last_network=""
last_battery=""
last_minute=""

while :; do
  changed=0
  now=$(date +%s)

  #### TIME ####
  minute=$(date +%M)
  if [ "$minute" != "$last_minute" ]; then
    time_status=$(date '+%-I:%M %p')  # Format: 1:30 PM
    last_minute="$minute"
    changed=1
  fi

  #### VOLUME ####
  read volume mute <<< $(amixer get Master | awk -F'[][]' '/Mono:/||/Left:/ {gsub("%",""); print $2, $6; exit} /Playback.*%/ {gsub("%",""); print $2, $4; exit}')
  icon=$(volume_icon "$volume" "$mute")

  if [ "$mute" = "off" ]; then
    volume_status="$icon Muted"
  elif [ "$volume" -eq 0 ]; then
    volume_status="$icon 0%"
  else
    volume_status="$icon $volume%"
  fi

  if [ "$volume_status" != "$last_volume" ]; then
    last_volume="$volume_status"
    changed=1
  fi

  #### NETWORK ####
  network_status=" Offline"
  for iface in /sys/class/net/*; do
    [ -f "$iface/operstate" ] || continue
    state=$(cat "$iface/operstate")
    [ "$state" = "up" ] || continue
    name=$(basename "$iface")
    case "$name" in
      wl*) network_status=" $name"; break ;;
      *)   network_status=" $name"; break ;;
    esac
  done

  if [ "$network_status" != "$last_network" ]; then
    last_network="$network_status"
    changed=1
  fi

  #### BATTERY ####
  battery_status=""
  for bat in /sys/class/power_supply/BAT*; do
    [ -d "$bat" ] || continue
    cap=$(cat "$bat/capacity")
    stat=$(cat "$bat/status")
    icon=$(battery_icon "$cap")
    [ "$stat" = "Charging" ] && icon="⚡$icon"
    battery_status="$icon $cap%"
    break
  done

  if [ "$battery_status" != "$last_battery" ]; then
    last_battery="$battery_status"
    changed=1
  fi

  #### SET STATUS ####
  status=" $last_network${last_battery:+ | $last_battery} | $last_volume | $time_status "

  # Update status bar only if something has changed
  if [ "$changed" -eq 1 ]; then
    xsetroot -name "$status"
  fi

  # Sleep for 1 second before checking again
  sleep 1
done &

# Start dwm
exec dwm

